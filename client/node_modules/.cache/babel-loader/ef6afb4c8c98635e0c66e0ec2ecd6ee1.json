{"ast":null,"code":"import _regeneratorRuntime from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport { Container } from 'todo-components'; // import { ApolloClient } from 'apollo-client'\n// import { RestLink } from 'apollo-link-rest'\n// import { InMemoryCache } from 'apollo-cache-inmemory'\n// import { ApolloProvider } from \"react-apollo\";\n\nvar SERVER_URL = 'http://localhost:4000'; // const restLink = new RestLink({\n//   uri: SERVER_URL,\n// });\n// const client = new ApolloClient({\n//   link: restLink,\n//   cache: new InMemoryCache ()\n// })\n// const App = () => {\n//   return (\n//     <ApolloProvider client={client}>\n//       <Container>\n//         <Header />\n//         <Main />\n//         <Footer />\n//       </Container>\n//     </ApolloProvider>\n//   )\n// }\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: []\n    };\n\n    _this.createTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var text, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                text = _ref.text;\n                _context.next = 3;\n                return axios.post(SERVER_URL + 'todos', {\n                  text: text\n                });\n\n              case 3:\n                response = _context.sent;\n\n                _this.setState(function (_ref3) {\n                  var todos = _ref3.todos;\n                  return {\n                    todos: todos.concat([response.data])\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.toggleTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(_ref4) {\n        var id, response, updatedTodo;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = _ref4.id;\n                _context2.next = 3;\n                return axios.put(\"\".concat(SERVER_URL, \"todos/\").concat(id, \"/toggle\"));\n\n              case 3:\n                response = _context2.sent;\n                updatedTodo = response.data;\n\n                _this.setState(function (_ref6) {\n                  var todos = _ref6.todos;\n                  return {\n                    todos: todos.map(function (todo) {\n                      if (todo.id !== id) {\n                        return todo;\n                      }\n\n                      return updatedTodo;\n                    })\n                  };\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.toggleAllTodos =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _ref8, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.put(SERVER_URL + 'todos/toggle');\n\n            case 2:\n              _context3.next = 4;\n              return axios.get(SERVER_URL + 'todos');\n\n            case 4:\n              _ref8 = _context3.sent;\n              data = _ref8.data;\n\n              _this.setState({\n                todos: data\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    _this.removeTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref9 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios.delete(\"\".concat(SERVER_URL, \"todo/\").concat(id));\n\n              case 2:\n                _this.setState(function (_ref10) {\n                  var todos = _ref10.todos;\n                  return {\n                    todos: todos.filter(function (todo) {\n                      if (todo.id !== id) {\n                        return true;\n                      }\n\n                      return false;\n                    })\n                  };\n                });\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x3) {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    _this.editTodo =\n    /*#__PURE__*/\n    function () {\n      var _ref11 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(id, text) {\n        var response, updatedTodo;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.put(\"\".concat(SERVER_URL, \"todos/\").concat(id), {\n                  text: text\n                });\n\n              case 2:\n                response = _context5.sent;\n                updatedTodo = response.data;\n\n                _this.setState(function (_ref12) {\n                  var todos = _ref12.todos;\n                  return {\n                    todos: todos.map(function (todo) {\n                      if (todo.id !== id) {\n                        return todo;\n                      }\n\n                      return updatedTodo;\n                    })\n                  };\n                });\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n\n    _this.clearAllCompleted =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var response, ids;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return axios.delete(SERVER_URL + 'todos/completed');\n\n            case 2:\n              response = _context6.sent;\n              ids = response.data.ids;\n\n              _this.setState(function (_ref14) {\n                var todos = _ref14.todos;\n                return {\n                  todos: todos.filter(function (todo) {\n                    if (ids.includes(todo.id)) {\n                      return false;\n                    }\n\n                    return true;\n                  })\n                };\n              });\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return axios.get(SERVER_URL + 'todos');\n\n              case 2:\n                response = _context7.sent;\n                this.setState({\n                  todos: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Header, {\n        createTodo: this.createTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(Main, {\n        todos: this.state.todos,\n        toggleAllTodos: this.toggleAllTodos,\n        toggleTodo: this.toggleTodo,\n        removeTodo: this.removeTodo,\n        editTodo: this.editTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        todos: this.state.todos,\n        clearAllCompleted: this.clearAllCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/src/App.js"],"names":["React","Component","axios","Main","Footer","Header","Container","SERVER_URL","App","state","todos","createTodo","text","post","response","setState","concat","data","toggleTodo","id","put","updatedTodo","map","todo","toggleAllTodos","get","removeTodo","delete","filter","editTodo","clearAllCompleted","ids","includes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport Main from './components/Main'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport { Container } from 'todo-components'\n\n// import { ApolloClient } from 'apollo-client'\n// import { RestLink } from 'apollo-link-rest'\n// import { InMemoryCache } from 'apollo-cache-inmemory'\n// import { ApolloProvider } from \"react-apollo\";\n\nconst SERVER_URL='http://localhost:4000'\n\n// const restLink = new RestLink({\n//   uri: SERVER_URL,\n// });\n\n// const client = new ApolloClient({\n//   link: restLink,\n//   cache: new InMemoryCache ()\n// })\n\n// const App = () => {\n//   return (\n//     <ApolloProvider client={client}>\n//       <Container>\n//         <Header />\n//         <Main />\n//         <Footer />\n//       </Container>\n//     </ApolloProvider>\n//   )\n// }\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n  async componentDidMount() {\n    const response = await axios.get(SERVER_URL+'todos')\n    this.setState({todos: response.data})\n  }\n  createTodo = async ({ text }) => {\n    const response = await axios.post(SERVER_URL+'todos', {text})\n    this.setState(({ todos }) => ({\n      todos: todos.concat([response.data])\n    }));\n  };\n\n  toggleTodo = async ({ id }) => {\n    const response = await axios.put(`${SERVER_URL}todos/${id}/toggle`)\n    const updatedTodo = response.data\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo => {\n        if (todo.id !== id) {\n          return todo;\n        }\n        return updatedTodo;\n      })\n    }));\n  };\n\n  toggleAllTodos = async () => {\n    await axios.put(SERVER_URL+'todos/toggle')\n    const {data} = await axios.get(SERVER_URL+'todos')\n    this.setState({todos: data})\n  }\n\n  removeTodo = async id => {\n    await axios.delete(`${SERVER_URL}todo/${id}`)\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => {\n        if (todo.id !== id) {\n          return true;\n        }\n        return false;\n      })\n    }));\n  }\n\n  editTodo = async (id, text) => {\n    const response = await axios.put(`${SERVER_URL}todos/${id}`, {text})\n    const updatedTodo = response.data\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo => {\n        if (todo.id !== id) {\n          return todo;\n        }\n        return updatedTodo;\n      })\n    }));\n  };\n\n  clearAllCompleted = async () => {\n    const response = await axios.delete(SERVER_URL+'todos/completed')\n    const {ids} = response.data\n    this.setState(({ todos }) => ({\n      todos: todos.filter(todo => {\n        if (ids.includes(todo.id)) {\n          return false;\n        }\n        return true;\n      })\n    }));\n  };\n\n  render() {\n    return (\n      <Container>\n        <Header createTodo={this.createTodo} />\n        <Main\n          todos={this.state.todos}\n          toggleAllTodos={this.toggleAllTodos}\n          toggleTodo={this.toggleTodo}\n          removeTodo={this.removeTodo}\n          editTodo={this.editTodo}\n        />\n        <Footer\n          todos={this.state.todos}\n          clearAllCompleted={this.clearAllCompleted}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}