{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreateTodo($text: String!) {\\n    createTodo(text: $text)\\n      @rest(type: \\\"Todo\\\", method: \\\"POST\\\", path:\\\"/todos\\\", bodyKey: \\\"text\\\"){\\n        id\\n        text\\n        completed\\n      }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Header } from 'todo-components';\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport withTodos from '../withTodos';\nvar withCreateTodo = gql(_templateObject());\nexport default compose(graphql(withCreateTodo, {\n  props: function props(_ref) {\n    var mutate = _ref.mutate;\n    return {\n      createTodo: function createTodo(text) {\n        mutate({\n          variables: {\n            text: text\n          },\n          refetchQueries: [{\n            query: withTodos\n          }]\n        });\n      }\n    };\n  }\n}))(Header);","map":{"version":3,"sources":["/Users/juliandong/Desktop/migrate-REST-to-Graphql/client/src/components/Header.js"],"names":["Header","gql","graphql","compose","withTodos","withCreateTodo","props","mutate","createTodo","text","variables","refetchQueries","query"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,iBAAvB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,IAAMC,cAAc,GAAGJ,GAAH,mBAApB;AAWA,eAAeE,OAAO,CACpBD,OAAO,CAACG,cAAD,EAAiB;AACtBC,EAAAA,KAAK,EAAE;AAAA,QAAEC,MAAF,QAAEA,MAAF;AAAA,WAAe;AACpBC,MAAAA,UAAU,EAAE,oBAACC,IAAD,EAAU;AACpBF,QAAAA,MAAM,CAAC;AACLG,UAAAA,SAAS,EAAE;AAACD,YAAAA,IAAI,EAAJA;AAAD,WADN;AAELE,UAAAA,cAAc,EAAE,CAAC;AAAEC,YAAAA,KAAK,EAAER;AAAT,WAAD;AAFX,SAAD,CAAN;AAID;AANmB,KAAf;AAAA;AADe,CAAjB,CADa,CAAP,CAWbJ,MAXa,CAAf","sourcesContent":["import { Header } from 'todo-components';\n\nimport gql from \"graphql-tag\";\nimport { graphql, compose } from \"react-apollo\";\nimport withTodos from '../withTodos';\n\nconst withCreateTodo = gql`\n  mutation CreateTodo($text: String!) {\n    createTodo(text: $text)\n      @rest(type: \"Todo\", method: \"POST\", path:\"/todos\", bodyKey: \"text\"){\n        id\n        text\n        completed\n      }\n  }\n`;\n\nexport default compose(\n  graphql(withCreateTodo, {\n    props: ({mutate}) => ({\n      createTodo: (text) => {\n        mutate({\n          variables: {text},\n          refetchQueries: [{ query: withTodos}]\n        })\n      }\n    })\n  })\n)(Header);"]},"metadata":{},"sourceType":"module"}